/*! For license information please see f2533208.264b7401.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[448336],{643013:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>a});var t=r(474848),s=r(28453);const o={id:"core-app-api.frontendhostdiscovery",title:"FrontendHostDiscovery",description:"API reference for FrontendHostDiscovery"},c=void 0,i={id:"reference/core-app-api.frontendhostdiscovery",title:"FrontendHostDiscovery",description:"API reference for FrontendHostDiscovery",source:"@site/../docs/reference/core-app-api.frontendhostdiscovery.md",sourceDirName:"reference",slug:"/reference/core-app-api.frontendhostdiscovery",permalink:"/docs/next/reference/core-app-api.frontendhostdiscovery",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/core-app-api.frontendhostdiscovery.md",tags:[],version:"current",frontMatter:{id:"core-app-api.frontendhostdiscovery",title:"FrontendHostDiscovery",description:"API reference for FrontendHostDiscovery"}},d={},a=[{value:"Methods",id:"methods",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/next/reference/",children:"Home"})," > ",(0,t.jsx)(n.a,{href:"/docs/next/reference/core-app-api",children:(0,t.jsx)(n.code,{children:"@backstage/core-app-api"})})," > ",(0,t.jsx)(n.a,{href:"/docs/next/reference/core-app-api.frontendhostdiscovery",children:(0,t.jsx)(n.code,{children:"FrontendHostDiscovery"})})]}),"\n",(0,t.jsx)(n.p,{children:"FrontendHostDiscovery is a config driven DiscoveryApi implementation. It uses the app-config to determine the url for a plugin."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class FrontendHostDiscovery implements DiscoveryApi \n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implements:"})," ",(0,t.jsx)(n.a,{href:"/docs/next/reference/core-plugin-api.discoveryapi",children:"DiscoveryApi"})]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.th,{children:["\n",(0,t.jsx)(n.p,{children:"Method"}),"\n"]}),(0,t.jsxs)(n.th,{children:["\n",(0,t.jsx)(n.p,{children:"Modifiers"}),"\n"]}),(0,t.jsxs)(n.th,{children:["\n",(0,t.jsx)(n.p,{children:"Description"}),"\n"]})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/next/reference/core-app-api.frontendhostdiscovery.fromconfig",children:"fromConfig(config, options)"})}),"\n"]}),(0,t.jsxs)(n.td,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"static"})}),"\n"]}),(0,t.jsxs)(n.td,{children:["\n",(0,t.jsxs)(n.p,{children:["Creates a new FrontendHostDiscovery discovery instance by reading the external target URL from the ",(0,t.jsx)(n.code,{children:"discovery.endpoints"})," config section."]}),"\n",(0,t.jsx)(n.p,{children:"eg."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"discovery:\n endpoints:\n   - target: https://internal.example.com/internal-catalog\n     plugins: [catalog]\n   - target: https://internal.example.com/secure/api/{{pluginId}}\n     plugins: [auth, permissions]\n   - target:\n       internal: https://internal.example.com/search\n       external: https://example.com/search\n     plugins: [search]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If a plugin is not declared in the config, the discovery will fall back to using the baseUrl with the provided ",(0,t.jsx)(n.code,{children:"pathPattern"})," appended. The default path pattern is ",(0,t.jsx)(n.code,{children:'"/api/{{ pluginId }}"'}),"."]}),"\n"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/next/reference/core-app-api.frontendhostdiscovery.getbaseurl",children:"getBaseUrl(pluginId)"})}),"\n"]}),(0,t.jsx)(n.td,{children:"\n"}),(0,t.jsx)(n.td,{children:"\n"})]})]})]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},221020:(e,n,r)=>{var t=r(296540),s=Symbol.for("react.element"),o=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function a(e,n,r){var t,o={},a=null,p=null;for(t in void 0!==r&&(a=""+r),void 0!==n.key&&(a=""+n.key),void 0!==n.ref&&(p=n.ref),n)c.call(n,t)&&!d.hasOwnProperty(t)&&(o[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:s,type:e,key:a,ref:p,props:o,_owner:i.current}}n.Fragment=o,n.jsx=a,n.jsxs=a},474848:(e,n,r)=>{e.exports=r(221020)},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var t=r(296540);const s={},o=t.createContext(s);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);